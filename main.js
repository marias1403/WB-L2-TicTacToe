(()=>{"use strict";function t(t,n){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=e(t))||n&&t&&"number"==typeof t.length){r&&(t=r);var o=0,a=function(){};return{s:a,n:function(){return o>=t.length?{done:!0}:{done:!1,value:t[o++]}},e:function(t){throw t},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var l,c=!0,i=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return c=t.done,t},e:function(t){i=!0,l=t},f:function(){try{c||null==r.return||r.return()}finally{if(i)throw l}}}}function e(t,e){if(t){if("string"==typeof t)return n(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(t,e):void 0}}function n(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}document.addEventListener("DOMContentLoaded",(function(){var r=Array.from(document.querySelectorAll("[data-cell]")),o=document.getElementById("message"),a=document.getElementById("start"),l=document.getElementsByName("mode"),c=document.getElementsByName("difficulty"),i="X",u=!0,s="random",f=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];function d(t,e){"X"===e?t.classList.add("game-board__cell_type_x"):"O"===e&&t.classList.add("game-board__cell_type_o")}function y(){var t,a=g(),l=m(a);l&&(u=!1,o.textContent="".concat(i," победил!"),"X"===i?(r[l[0]].style.backgroundColor="#DEFFF0",r[l[0]].style.border="none",r[l[1]].style.backgroundColor="#DEFFF0",r[l[1]].style.border="none",r[l[2]].style.backgroundColor="#DEFFF0",r[l[2]].style.border="none"):(o.style.color="#E85AAD",r[l[0]].style.backgroundColor="#FFEFF7",r[l[0]].style.border="none",r[l[1]].style.backgroundColor="#FFEFF7",r[l[1]].style.border="none",r[l[2]].style.backgroundColor="#FFEFF7",r[l[2]].style.border="none")),(t=a,function(t){if(Array.isArray(t))return n(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||e(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).some((function(t){return!t}))||(u=!1,o.textContent="Ничья!")}function m(n){var r,o,a,l=t(f);try{for(l.s();!(r=l.n()).done;){var c=r.value,i=(a=3,function(t){if(Array.isArray(t))return t}(o=c)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,a,l,c=[],i=!0,u=!1;try{if(a=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;i=!1}else for(;!(i=(r=a.call(n)).done)&&(c.push(r.value),c.length!==e);i=!0);}catch(t){u=!0,o=t}finally{try{if(!i&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(u)throw o}}return c}}(o,a)||e(o,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=i[0],s=i[1],d=i[2];if(n[u]&&n[u]===n[s]&&n[u]===n[d])return c}}catch(t){l.e(t)}finally{l.f()}return null}function g(){var t=[];return r.forEach((function(e){e.classList.contains("game-board__cell_type_x")?t.push("O"):e.classList.contains("game-board__cell_type_o")?t.push("X"):t.push("")})),t}function v(t){var e=t.target;e.classList.contains("game-board__cell_type_x")||e.classList.contains("game-board__cell_type_o")||!u||(d(e,i),y(),i="X"===i?"O":"X",u&&"O"===i&&"computer"===_()&&p(),function(){if(u){var t={settings:{mode:_(),difficulty:s},cells:g()};localStorage.setItem("gameData",JSON.stringify(t))}else localStorage.removeItem("gameData")}())}function h(){"computer"===_()&&"O"===i&&p()}function b(t){s=t.target.value}function _(){var e,n=t(l);try{for(n.s();!(e=n.n()).done;){var r=e.value;if(r.checked)return r.value}}catch(t){n.e(t)}finally{n.f()}return"human"}function p(){var t;"random"===s?(t=[].concat(r).filter((function(t){return!t.classList.contains("game-board__cell_type_x")&&!t.classList.contains("game-board__cell_type_o")}))).length>0&&(d(t[Math.floor(Math.random()*t.length)],i),y(),i="X"):"smart"===s&&function(){for(var t=g(),e=0;e<t.length;e++)if(!t[e]){if(t[e]="O",m(t))return d(r[e],i),y(),void(i="X");t[e]=""}for(var n=0;n<t.length;n++)if(!t[n]){if(t[n]="X",m(t))return d(r[n],i),y(),void(i="X");t[n]=""}if(!t[4])return d(r[4],i),y(),void(i="X");var o=[0,2,6,8].filter((function(e){return!t[e]}));if(o.length>0){var a=o[Math.floor(Math.random()*o.length)];return d(r[a],i),y(),void(i="X")}var l=[].concat(r).filter((function(t){return!t.classList.contains("game-board__cell_type_x")&&!t.classList.contains("game-board__cell_type_o")}));l.length>0&&(d(l[Math.floor(Math.random()*l.length)],i),y(),i="X")}()}!function(){var e=localStorage.getItem("gameData");if(e){var n,o=JSON.parse(e),a=t(l);try{for(a.s();!(n=a.n()).done;){var i=n.value;i.checked=i.value===o.settings.mode}}catch(t){a.e(t)}finally{a.f()}if("computer"===o.settings.mode){var u,s=t(c);try{for(s.s();!(u=s.n()).done;){var f=u.value;f.checked=f.value===o.settings.difficulty}}catch(t){s.e(t)}finally{s.f()}}for(var y=0;y<o.cells.length;y++)d(r[y],o.cells[y])}}(),r.forEach((function(t){return t.addEventListener("click",v)})),a.addEventListener("click",(function(){r.forEach((function(t){console.log(t),t.classList.remove("game-board__cell_type_x"),t.classList.remove("game-board__cell_type_o"),t.style.backgroundColor=""})),o.textContent="",i="X",u=!0})),l.forEach((function(t){return t.addEventListener("change",h)})),c.forEach((function(t){return t.addEventListener("change",b)}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,